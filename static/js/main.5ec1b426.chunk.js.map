{"version":3,"sources":["components/Navbar.js","components/Textform.js","components/Alert.js","App.js","reportWebVitals.js","index.js"],"names":["Navbar","props","className","style","mode","navbar","href","title","type","id","onClick","textform","backgroundColor","setmode","types","two","document","body","setalert","text","one","htmlFor","Textform","useState","setText","color","placeholder","value","onChange","event","target","rows","disabled","length","textformbtn","toUpperCase","toLowerCase","t","split","s","i","substring","alert","setTimeout","getElementsByClassName","getElementById","alertC","box","out","in","x","App","transition","boxShadow","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","render","StrictMode"],"mappings":"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","file":"static/js/main.5ec1b426.chunk.js","sourcesContent":["import React from 'react'\r\n// import { Link } from 'react-router-dom';\r\n\r\nexport default function Navbar(props){\r\n    \r\n    const onoff = () => {\r\n        if(props.mode.textform.backgroundColor==='white')\r\n        {\r\n            props.setmode(props.types.two);\r\n            document.body.style.backgroundColor = '#031e34';\r\n            props.setalert({text : 'Dark Mode Enabled'});\r\n        }\r\n        else\r\n        {\r\n            props.setmode(props.types.one);\r\n            document.body.style.backgroundColor = '#f4f4f4';\r\n            props.setalert({text : 'Light Mode Enabled'});\r\n        }\r\n    }\r\n    return (\r\n        <nav className={\"navbar navbar-expand-lg \"} style={props.mode.navbar}>\r\n            <div className={\"container-fluid\"} style={props.mode.navbar}>\r\n                <a className=\"navbar-brand\" href=\"/\" style={props.mode.navbar}>{props.title}</a>\r\n                <button className=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#navbarTogglerDemo02\" aria-controls=\"navbarTogglerDemo02\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n                    <span className=\"navbar-toggler-icon\"></span>\r\n                </button>\r\n                <div className=\"collapse navbar-collapse\" id=\"navbarTogglerDemo02\">\r\n                    <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\r\n                        <li className=\"nav-item\">\r\n                            <a className=\"nav-link active\" style={props.mode.navbar} aria-current=\"page\" href=\"/\">About Us</a>\r\n                        </li>\r\n                        <li className=\"nav-item\">\r\n                            <a className=\"nav-link\" style={props.mode.navbar} href=\"/\">Contact Us</a>\r\n                        </li>\r\n                        <li className=\"nav-item\">\r\n                            <a className=\"nav-link\" style={props.mode.navbar}>Feedback</a>\r\n                        </li>\r\n                    </ul>\r\n                        <div className=\"form-check form-switch\">\r\n                            <input className=\"form-check-input\" type=\"checkbox\" onClick={onoff} id=\"flexSwitchCheckDefault\"/>\r\n                            <label className=\"form-check-label\" htmlFor=\"flexSwitchCheckDefault\">Dark mode</label>\r\n                        </div>\r\n                </div>\r\n            </div>\r\n        </nav>\r\n    )\r\n}","import React,{useState} from 'react'\r\nimport '../App.css';\r\n\r\nexport default function Textform(props) {\r\n  const [text, setText] = useState('')\r\n  const change = (event) =>\r\n  {\r\n    setText(event.target.value)\r\n  };\r\n  const changeup = () =>\r\n  {\r\n    setText(text.toUpperCase())\r\n    props.setalert({text:\"Converted to Uppercase\"});\r\n  };\r\n  const changelo = () =>\r\n  {\r\n    setText(text.toLowerCase())\r\n    props.setalert({text:\"Converted to Lowercase\"});\r\n  };\r\n  const ChangeUl = () =>\r\n  {\r\n    let t = text.split(' '),s = \"\";\r\n    for(let i=0;i<t.length;i++)\r\n    {\r\n      t[i] = t[i].substring(0,1).toUpperCase()+t[i].substring(1);\r\n      s+= t[i]+' ';\r\n    }\r\n    setText(s);\r\n    props.setalert({text:\"Converted to This Case\"});\r\n  };\r\n  const clear = () =>\r\n  {\r\n    setText('')\r\n  };\r\n  return (\r\n    <div className='form-box'>\r\n      <div className=\"w-75 mx-auto\">\r\n        <h3 htmlFor=\"exampleFormControlTextarea1\" className=\"form-label mb-4\" style={{color : props.mode.textform.backgroundColor==='white' ? '#004651' : 'white'}}>Text Area</h3>\r\n        <textarea placeholder='Enter Text Here' value={text} style={props.mode.textform} onChange={change} className=\"form-control\" id=\"exampleFormControlTextarea1\" rows=\"12\"></textarea>\r\n      <button className='btn btn-primary my-3 mx-1' disabled={text.length === 0} style={props.mode.textformbtn} onClick={changeup}>Convert to UPPERCASE</button>\r\n      <button className='btn btn-primary my-3 mx-1' disabled={text.length === 0} style={props.mode.textformbtn}onClick={changelo}>Convert to lowercase</button>\r\n      <button className='btn btn-primary my-3 mx-1' disabled={text.length === 0} style={props.mode.textformbtn}onClick={ChangeUl}>Convert to This Case</button>\r\n      <button className='btn btn-primary my-3 mx-1' disabled={text.length === 0} style={props.mode.textformbtn}onClick={clear}>Clear Text</button>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n","import React from 'react'\r\nimport '../App.css';\r\n\r\nexport default function alert(props) {\r\n    if(props.alert==null)\r\n    return (<div className='alerthid' id='boxalert'>\r\n      <div className='alerttext'>\r\n          <h3 className='alert-content'></h3>\r\n      </div>\r\n      <div className='runout1' id='runout'><div className='runin1' id='runin'></div></div>\r\n  </div>);\r\n    const g = setTimeout(()=>{\r\n        if(document.getElementsByClassName('alertbox'))\r\n            document.getElementById('boxalert').className='alerthid';\r\n    },1500);\r\n    document.getElementById('boxalert').className='alertbox'\r\n    return (\r\n        <div className='alertbox' id='boxalert' style={props.mode.alertC.box}>\r\n            <div className='alerttext'>\r\n                <h5 className='alert-content' style={props.mode.alertC.text}>{props.alert.text}</h5>\r\n            </div>\r\n            <div className='runout' id='runout' style={props.mode.alertC.out}><div className='runin' id='runin' style={props.mode.alertC.in}></div></div>\r\n        </div>\r\n        );\r\n}\r\n","// import logo from './logo.svg';\nimport { useState } from 'react';\nimport './App.css';\nimport Navbar from './components/Navbar';\nimport Textform from './components/Textform';\nimport Alert from './components/Alert';\n// import {BrowserRouter as Router,Route, Routes} from \"react-router-dom\"\nlet x=0;\n\nfunction App() {\n  const types = {one : {\n      navbar :{\n        color:'white',\n        backgroundColor:'#004651',\n        transition:'all 0s'\n      },\n      textform :{\n        backgroundColor:'white',\n        transition:'all 0s'\n      },\n      textformbtn:{\n        backgroundColor:'#004651',\n        transition:'all 0s'\n      },\n      alertC:{\n        text : {color:'#004651'},\n        box : {boxShadow:'3px 3px 4px 4px rgb(163, 163, 163)',backgroundColor:'white'},\n        out : {backgroundColor:'white'},\n        in : {backgroundColor:'#016271'}\n      }\n    },\n    two : {\n      navbar :{\n        color:'white',\n        backgroundColor:'black',\n        transition:'all 0s'\n      },\n      textform :{\n        color:'black',\n        backgroundColor:'#cbcbcb',\n        transition:'all 0s'\n      },\n      textformbtn:{\n        backgroundColor:'black',\n        transition:'all 0s'\n      },\n      alertC:{\n        text : {color:'white'},\n        box : {boxShadow:'2px 2px 3px 3px rgb(133, 133, 133)',backgroundColor:'#0A2647'},\n        out : {backgroundColor:'#012a31'},\n        in : {backgroundColor:'black'}\n      }\n    }\n  }\n  if(x===0)\n  {\n    document.body.style.backgroundColor = '#f4f4f4';\n    document.title = 'Text-Utility'\n    x+=1;\n  }\n  const [alert,setalert] = useState(null)\n  const [mode,setmode] = useState(types.one)\n\n  return (\n    <div>\n        {/* <Router> */}\n        <Navbar title=\"Text-Analyzer\" mode={mode} setmode={setmode} types={types} alert={alert} setalert={setalert}/>\n        <Alert alert={alert} mode={mode}/>\n        <Textform mode={mode} alert={alert} setalert={setalert}/>\n        {/* <Routes> */}\n          {/* <Route path='/' element={<Textform mode={mode} alert={alert} setalert={setalert}/>}/> */}\n          {/* <Route path='/about' element={<Textform mode={mode} alert={alert} setalert={setalert}/>}/> */}\n        {/* </Routes> */}\n        {/* </Router> */}\n    </div>\n  );\n}\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}